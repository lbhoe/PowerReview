# 1st command: $script = Get-Content -Path 'C:\Users\admin\Desktop\PowerReview\custom_use_case.txt' -Raw
# 2nd command: Invoke-Expression $script

$scriptPath = 'C:\Users\admin\Desktop\PowerReview' # amend to the path containing the evtx files
$startDate = '2000-01-01' # amend accordingly
$endDate = '2024-06-26' # amend accordingly

$evtxFiles = Get-ChildItem -Path $scriptPath -Recurse -Filter *.evtx
$results = @()
$totalFiles = $evtxFiles.Count
$currentFileIndex = 0

foreach ($file in $evtxFiles) {
    $currentFileIndex++
    $percentComplete = [math]::Round(($currentFileIndex / $totalFiles) * 100)
    Write-Progress -Activity "Processing EVTX files" -Status "Processing file $currentFileIndex of $totalFiles" -PercentComplete $percentComplete

    try {
        $events = Get-WinEvent -FilterHashtable @{
            Path      = $file.FullName
            Id        = 1102, 4728, 11707, 11724, 4732, 4719, 20001, 4720
            StartTime = $startDate
            EndTime   = $endDate
        } -ErrorAction Stop

        $filteredEvents = $events | Where-Object {
            $_.LogName -eq 'Security' -or
            $_.LogName -eq 'Application' -or
            $_.LogName -eq 'System'
        }

        $results += $filteredEvents
    }
    catch {
        Continue
    }
}

$deduplicatedResults = $results | Select-Object -Unique TimeCreated, Id, Message, MachineName, UserId
$data = $deduplicatedResults | Sort-Object -Property TimeCreated

$data | ForEach-Object {
    $_ | Add-Member -MemberType NoteProperty -Name "Report ID" -Value "PowerReview"
    if ($_.PSObject.Properties["TimeCreated"]) {
        $_ | Add-Member -MemberType NoteProperty -Name "Time" -Value $_.TimeCreated
    }
    $_ | Add-Member -MemberType NoteProperty -Name "Agency" -Value ""
    $_ | Add-Member -MemberType NoteProperty -Name "agencyhf" -Value ""
    if ($_.PSObject.Properties["Id"]) {
        $_ | Add-Member -MemberType NoteProperty -Name "EventCode" -Value $_.Id
    }
    if ($_.PSObject.Properties["Message"]) {
        $_ | Add-Member -MemberType NoteProperty -Name "Commands/Events" -Value $_.Message
    }
    if ($_.PSObject.Properties["MachineName"]) {
        $_ | Add-Member -MemberType NoteProperty -Name "Hostname" -Value $_.MachineName
    }
    if ($_.PSObject.Properties["UserId"]) {
        $_ | Add-Member -MemberType NoteProperty -Name "Users" -Value $_.UserId
    }
    $_ | Add-Member -MemberType NoteProperty -Name "IP Address" -Value ""
    $_ | Add-Member -MemberType NoteProperty -Name "Domain_Group" -Value ""
    $_ | Add-Member -MemberType NoteProperty -Name "Group_Name" -Value ""
    $_ | Add-Member -MemberType NoteProperty -Name "Local_Account" -Value ""
    $_ | Add-Member -MemberType NoteProperty -Name "User_Added" -Value ""
}

$data | ForEach-Object {
    $_.PSObject.Properties.Remove("TimeCreated")
    $_.PSObject.Properties.Remove("Id")
    $_.PSObject.Properties.Remove("Message")
    $_.PSObject.Properties.Remove("MachineName")
    $_.PSObject.Properties.Remove("UserId")
}

$data | ForEach-Object {
    try {
        switch ($_) {
            { $_.EventCode -eq 1102 } {
                $users_pattern = 'Subject:\s+.*\s+Account Name:\s+([^\n\t\r]+)'
                $users = $_.'Commands/Events' -match $users_pattern
                if ($users -eq "True") {
                    $_.Users = $matches[1]
                }
                $_.'Commands/Events' = "The audit log was cleared"
            }

            { $_.EventCode -eq 4719 } {
                $users_pattern = 'Subject:\s+.*\s+Account Name:\s+([^\n\t\r]+)'
                $users = $_.'Commands/Events' -match $users_pattern
                $_.Users = $matches[1]
                $_.'Commands/Events' = "System audit policy was changed"
            }

            { $_.EventCode -eq 4720 } {
                $users_pattern = 'Subject:\s+.*\s+Account Name:\s+([^\n\t\r]+)'
                $added_pattern = 'New Account:\s+.*\s+Account Name:\s+([^\n\t\r]+)'
                $users = $_.'Commands/Events' -match $users_pattern
                $_.Users = $matches[1]
                $user_added = $_.'Commands/Events' -match $added_pattern
                $_.User_Added = $matches[1]
                $_.'Commands/Events' = "A user account was created"
            }

            { $_.EventCode -eq 4728 } {
                $users_pattern = 'Subject:\s+.*\s+Account Name:\s+([^\n\t\r]+)'
                $added_pattern = 'Member:\s+.*\s+Account Name:\s+([^\n\t\r]+)'
                $group_pattern = 'Group:\s+.*\s+Group Name:\s+([^\n]+)\s+Group Domain:\s+([^\n\t\r]+)'
                $users = $_.'Commands/Events' -match $users_pattern
                $_.Users = $matches[1]
                $user_added = $_.'Commands/Events' -match $added_pattern
                if ($user_added -eq "True") {
                    if ($matches[1].Contains(",")) {
                        $string = $matches[1]
                        $common_name = '(CN|cn)=([^,]+)'
                        $grab_common_name = $string -match $common_name
                        $_.User_Added = $matches[2]
                    }
                    else {
                        $_.User_Added = $matches[1]
                    }
                }
                $group = $_.'Commands/Events' -match $group_pattern
                $_.Domain_Group = $matches[2] + '\' + $matches[1]
                $_.'Commands/Events' = "A member was added to a security-enabled global group"
            }

            { $_.EventCode -eq 4732 } {
                $users_pattern = 'Subject:\s+.*\s+Account Name:\s+([^\n\t\r]+)'
                $added_pattern = 'Member:\s+.*\s+Account Name:\s+([^\n\t\r]+)'
                $group_pattern = 'Group:\s+.*\s+Group Name:\s+([^\n]+)\s+Group Domain:\s+([^\n\t\r]+)'
                $users = $_.'Commands/Events' -match $users_pattern
                $_.Users = $matches[1]
                $user_added = $_.'Commands/Events' -match $added_pattern
                if ($user_added -eq "True") {
                    if ($matches[1].Contains(",")) {
                        $string = $matches[1]
                        $common_name = '(CN|cn)=([^,]+)'
                        $grab_common_name = $string -match $common_name
                        $_.User_Added = $matches[2]
                    }
                    else {
                        $_.User_Added = $matches[1]
                    }
                }
                $group = $_.'Commands/Events' -match $group_pattern
                $_.Local_Account = $matches[2] + '\' + $matches[1]
                $_.Group_Name = $matches[1]
                $_.'Commands/Events' = "A member was added to a security-enabled local group"
            }
        }
    }
    catch {
        Write-Host "Error processing event code $($_.EventCode): $_"
    }
}

$outputFileName = "ABLR_PowerReview_s$($startDate)_e$($endDate).csv"
$outputFilePath = Join-Path -Path $scriptPath -ChildPath $outputFileName
$data | Export-Csv -Path $outputFilePath -NoTypeInformation
Write-Host "Results saved to $outputFilePath"
Write-Host ""
